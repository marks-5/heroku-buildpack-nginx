#!/usr/bin/env bash
set -o monitor

#Evaluate config to get $PORT
erb config/nginx.conf.erb > config/nginx.conf

#Redirect NGINX logs to stdout.
mkdir -p logs
touch logs/access.log logs/error.log
tail -qF -n 0 logs/*.log &
echo 'nginx-buildpack: Established log tail.'

#Take the command passed to this bin and start it.
#E.g. bin/start-nginx bundle exec unicorn -c config/unicorn.rb
( exec $@ ) &
echo "nginx-buildpack: Starting $@"
#We block on app-initialized so that when NGINX binds to $PORT
#are app is ready for traffic.
while [[ ! -f /tmp/app-initialized ]]
do
	echo 'nginx-buildpack: Waiting on app initialization...'
	sleep 1
done
echo 'nginx-buildpack: App initialized.'

#If any child exits, we will exit this process.
#This will in turn cause heroku to crash the dyno.
#We trap this signal here because at this point in the
#file, there should be no more commands/exits.
trap handleSigChld SIGCHLD
handleSigChld() {
	echo 'nginx-buildpack: SIGCHLD handled.'
	exit 1
}
echo 'nginx-buildpack: Installed SIGCHLD trap.'

#We expect nginx to run in foreground.
#We also expect a socket to be at /tmp/nginx.socket.
echo 'nginx-buildpack: Starting NGINX.'
exec bin/nginx -p . -c config/nginx.conf
