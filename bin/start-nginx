#!/usr/bin/env bash

psmgr=/tmp/nginx-buildpack-wait
rm -f $psmgr
mkfifo $psmgr

#Evaluate config to get $PORT
erb config/nginx.conf.erb > config/nginx.conf

#Redirect NGINX logs to stdout.
mkdir -p logs/nginx
touch logs/nginx/access.log logs/nginx/error.log
(
	tail -qF -n 0 logs/nginx/*.log &
	echo 'nginx-buildpack: Established log tail.'
	wait
	echo 'at=log-tail-crash' > $psmgr
) &

#Take the command passed to this bin and start it.
#E.g. bin/start-nginx bundle exec unicorn -c config/unicorn.rb
(
	exec $@
	echo "nginx-buildpack: Starting $@"
	wait
	echo "at=app-server-crash cmd=$@" > $psmgr
) &
#We block on app-initialized so that when NGINX binds to $PORT
#are app is ready for traffic.
while [[ ! -f /tmp/app-initialized ]]
do
	echo 'nginx-buildpack: Waiting on app initialization...'
	sleep 1
done
echo 'nginx-buildpack: App initialized.'

#We expect nginx to run in foreground.
#We also expect a socket to be at /tmp/nginx.socket.
(
	exec bin/nginx -p . -c config/nginx.conf
	echo 'nginx-buildpack: NGINX started.'
	wait
	echo "at=nginx-server-crash" > $psmgr
) &

if read line <$psmgr; then
        echo $line
        exit 1
fi
